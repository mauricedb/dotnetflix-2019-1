[
  {
    "type": "openFile",
    "path": "src/components/jokes.tsx"
  },
  {
    "type": "goto",
    "line": 24
  },
  {
    "type": "command",
    "command": "editor.action.smartSelect.expand"
  },
  {
    "type": "command",
    "command": "editor.action.clipboardCopyAction"
  },
  {
    "type": "goto",
    "line": 45
  },
  {
    "type": "typeText",
    "text": ["", "const Jokes: React.FC<JokesProps> = ({ url }) => {", "}", ""]
  },
  {
    "type": "goto",
    "line": 46,
    "column": 999
  },
  {
    "type": "command",
    "command": "editor.action.clipboardPasteAction"
  },
  {
    "type": "goto",
    "line": 47
  },
  {
    "type": "command",
    "command": "editor.action.clipboardCutAction"
  },
  {
    "type": "typeText",
    "text": [
      "  const [{ jokes, loading }, setState] = React.useState(initialState);",
      ""
    ]
  },

  {
    "type": "goto",
    "line": 14
  },
  {
    "type": "command",
    "command": "editor.action.smartSelect.expand",
    "repeat": 2
  },
  {
    "type": "command",
    "command": "editor.action.clipboardCutAction"
  },

  {
    "type": "wait",
    "delay": "manual",
    "save": true
  },
  {
    "type": "openFile",
    "path": "src/components/jokes.tsx"
  },
  {
    "type": "goto",
    "line": 14
  },
  {
    "type": "typeText",
    "text": [
      "",
      "  React.useEffect(() => {",
      "    const fetchJokes = async () => {",
      "      const rsp = await fetch(url);",
      "      const jokes = await rsp.json();",
      "      setState({ jokes, loading: false });",
      "    };",
      "    fetchJokes();",
      "  }, [url]);",
      ""
    ]
  },
  {
    "type": "wait",
    "delay": "manual",
    "save": true
  },

  {
    "type": "openFile",
    "path": "src/components/clock.tsx"
  },
  {
    "type": "goto",
    "line": 11,
    "column": 21
  },
  {
    "type": "command",
    "command": "editor.action.smartSelect.expand",
    "repeat": 2
  },
  {
    "type": "command",
    "command": "editor.action.clipboardCutAction"
  },
  {
    "type": "command",
    "command": "editor.action.smartSelect.expand",
    "repeat": 12
  },
  {
    "type": "command",
    "command": "editor.action.clipboardPasteAction"
  },
  {
    "type": "goto",
    "line": 6,
    "column": 999
  },
  {
    "type": "typeText",
    "text": [
      "",
      "  const now = React.useContext(TimeContext);",
      "  const color = React.useContext(ColorContext);",
      ""
    ]
  },
  {
    "type": "wait",
    "delay": "manual",
    "save": true
  },

  {
    "type": "openFile",
    "path": "src/components/jokes.tsx"
  },
  {
    "type": "goto",
    "line": 29
  },
  {
    "type": "command",
    "command": "editor.action.clipboardCutAction",
    "repeat": 2
  },
  {
    "type": "goto",
    "line": 37
  },
  {
    "type": "command",
    "command": "editor.action.clipboardCutAction",
    "repeat": 2
  },
  {
    "type": "goto",
    "line": 12,
    "column": 999
  },
  {
    "type": "typeText",
    "text": ["", "  const color = React.useContext(ColorContext);", ""]
  },
  {
    "type": "wait",
    "delay": "manual",
    "save": true
  },

  {
    "type": "openFile",
    "path": "src/components/jokes.tsx"
  },
  {
    "type": "goto",
    "line": 15
  },
  {
    "type": "command",
    "command": "cursorDownSelect",
    "repeat": 10
  },
  {
    "type": "command",
    "command": "editor.action.clipboardCutAction"
  },
  {
    "type": "goto",
    "line": 11
  },
  {
    "type": "typeText",
    "text": ["", "const useJokes = (url: string): JokesState => {", "", "}", ""]
  },
  {
    "type": "goto",
    "line": 13
  },
  {
    "type": "command",
    "command": "editor.action.clipboardPasteAction"
  },
  {
    "type": "typeText",
    "text": ["", "  return { loading, jokes };"]
  },
  {
    "type": "goto",
    "line": 29
  },
  {
    "type": "typeText",
    "text": ["  const { loading, jokes } = useJokes(url);", ""]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  }
]
